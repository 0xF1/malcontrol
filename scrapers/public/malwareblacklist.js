var scraper = require('./../scraper');
var _savemalware = require('../../commons/save_malw');
var _base_searching_url = "http://www.malwareblacklist.com/showAllMalwareURL.php?userName=Guest&sessionID=&downloadOption=0&pageNo=";
var _followingparams = "&totalPageno=20";

var _local_cache = {};

//URLQUERY
exports.goScraper = function() {

  _savemalware.firstTimeRunningMalware("malwareblacklist.com", function(firstime) {

    var uris = [];
    if (firstime) {
      for (var i = 1; i < 5000; i++) {
        uris[i - 1] = _base_searching_url + i + _followingparams;
      }
      console.log("[+] First time you are scraping malwareblacklist.com");
      console.log("[+] Building DB =========================================");
      console.log("[+] Will query: " + uris.length * 50 + " This will get a lot of resources and time !");
      console.log("[+] Building DB =========================================");
    } else {
      console.log("[+] Not the first time you are scraping malwwareblacklist.com!");
      uris.push(_base_searching_url + "1");
    }
    try {
      return scraper(uris, function(err, jQuery) {
        if (err) {
          return console.log("[-] Error happening in malwareblacklist.com: " + err);
        }
        console.log("[+] Querying malwareblacklist");

        var trs = null;

        jQuery('table').each(function() {
          trs = jQuery(this).find('tr');
          if (trs.length < 3) {
            trs = null;
            // Assume skip!!!
            return true;
          } else {
            return false;
          }
        });

        if (trs === null) {
          console.error("[+] <malwareblacklist.com> table not found!");
          return true;
        }
        var i = 0;
        trs.each(function() {
          try {
          //super specific to website ! (header first)
          i++;
          if (i <= 1)
            return true; //continue

          var content = jQuery(this);
          if (undefined !== content && null !== content) {

            var ts = content.find("td").eq(0).text();
            var timestamp = null;
            var r = /(\d{4}\/\d{1,2}\/\d{1,2}).*(\d{1,2}:\d{1,2})/.exec(ts);
            if (r !== null) {
              try {
                timestamp = new Date(r[1] + ' ' + r[2] + ' UTC').toISOString();
              } catch (e) {}
            }
            if (timestamp === null) {
              console.error("[+] <malwareblacklist.com> Can't parse timestamp: " + ts)
              timestamp = ts;
            }
            console.log("[+] <malwareblacklist.com> Time Stamp found: " + timestamp);

            var md5 = "NA";

            var ip = content.find("td").eq(3).text();
            console.log("[+] <malwareblacklist.com> IP found: " + ip);

            var compositscore = "100/100";

            // TODO: it's the name?
            var name = content.find("td").eq(1).text();
            console.log("[+] <malwareblacklist.com> Name found: " + name);

            // Ugly hack
            var linkToReport = "http://www.malwareblacklist.com/fakeReport/" + content.find("td").eq(1).text();
            console.log("[+] <malwareblacklist.com> Fake report: " + linkToReport);

            var desc = content.find("td").eq(5).text();
            desc = desc + "Submitted by(" + content.find("td").eq(8).text() + ")";
            desc = desc + "Registar by (" + content.find("td").eq(2).text() + ")";;
            console.log("[+] <malwareblacklist.com> Desc found: " + desc);

            _savemalware.saveMalwareToDB(linkToReport, timestamp, ip, compositscore, "malwareblacklist.com", desc, md5, name);
            return true;
          } //not nulls
          } catch(e) {
            console.error("[+] <malwareblacklist.com> error scraping: " + e.stack);
          }
        }); //foreach element in the table of the scraped source
        return true;
      }, {
        'reqPerSec': 0.2
      }); //scraper
    } catch (ex) {
      return console.log("[-] Error in scraping malrw " + ex);
    }
  });

}; //goScraper
